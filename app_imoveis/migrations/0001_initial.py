# Generated by Django 5.2.4 on 2025-08-08 20:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app_clientes', '0001_initial'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Imovel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo_anuncio', models.CharField(blank=True, max_length=255, null=True, verbose_name='Título do Anúncio')),
                ('codigo_referencia', models.CharField(blank=True, editable=False, max_length=50, null=True, unique=True, verbose_name='Código de Referência')),
                ('tipo', models.CharField(choices=[('CASA', 'Casa'), ('APARTAMENTO', 'Apartamento'), ('TERRENO', 'Terreno'), ('SALA_COMERCIAL', 'Sala Comercial'), ('GALPAO', 'Galpão'), ('RURAL', 'Rural'), ('OUTRO', 'Outro')], max_length=50, verbose_name='Tipo de Imóvel')),
                ('finalidade', models.CharField(choices=[('RESIDENCIAL', 'Residencial'), ('COMERCIAL', 'Comercial'), ('INDUSTRIAL', 'Industrial'), ('RURAL', 'Rural')], max_length=50, verbose_name='Finalidade')),
                ('status', models.CharField(choices=[('A_VENDA', 'À Venda'), ('PARA_ALUGAR', 'Para Alugar'), ('VENDIDO', 'Vendido'), ('ALUGADO', 'Alugado'), ('EM_CONSTRUCAO', 'Em Construção'), ('DESATIVADO', 'Desativado')], default='A_VENDA', max_length=50, verbose_name='Status')),
                ('situacao', models.CharField(blank=True, choices=[('NOVO', 'Novo'), ('USADO', 'Usado'), ('NA_PLANTA', 'Na Planta')], max_length=20, null=True, verbose_name='Situação do Imóvel')),
                ('disponibilidade', models.CharField(blank=True, choices=[('IMEDIATA', 'Imediata'), ('OCUPADO', 'Ocupado'), ('DESOCUPADO', 'Desocupado')], max_length=20, null=True, verbose_name='Disponibilidade')),
                ('publicado_no_site', models.BooleanField(default=True, verbose_name='Publicar no site?')),
                ('valor_venda', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor de Venda')),
                ('valor_aluguel', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Valor de Aluguel')),
                ('valor_condominio', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor do Condomínio')),
                ('valor_iptu', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Valor do IPTU (Anual)')),
                ('endereco', models.CharField(max_length=255, verbose_name='Endereço Completo (Rua, Número)')),
                ('bairro', models.CharField(max_length=100, verbose_name='Bairro')),
                ('cidade', models.CharField(max_length=100, verbose_name='Cidade')),
                ('estado', models.CharField(max_length=2, verbose_name='Estado (UF)')),
                ('cep', models.CharField(blank=True, max_length=9, null=True, verbose_name='CEP')),
                ('posicao_solar', models.CharField(blank=True, choices=[('NORTE', 'Norte (Sol da Manhã)'), ('SUL', 'Sul'), ('LESTE', 'Leste (Sol da Manhã)'), ('OESTE', 'Oeste (Sol da Tarde)')], max_length=10, null=True, verbose_name='Posição Solar')),
                ('andar', models.IntegerField(blank=True, null=True, verbose_name='Andar (se apartamento)')),
                ('vista', models.CharField(blank=True, max_length=100, null=True, verbose_name='Vista (Ex: Mar, Montanha)')),
                ('ponto_referencia', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ponto de Referência')),
                ('localizacao_condominio', models.CharField(blank=True, max_length=100, null=True, verbose_name='Localização no Condomínio')),
                ('area_construida', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Área Construída (m²)')),
                ('area_util', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Área Útil (m²)')),
                ('area_total', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Área Total (m²)')),
                ('area_terreno', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Área do Terreno (m²)')),
                ('dimensao_frente', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Frente (m)')),
                ('dimensao_fundos', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Fundos (m)')),
                ('dimensao_direita', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Lado Direito (m)')),
                ('dimensao_esquerda', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Lado Esquerdo (m)')),
                ('ano_construcao', models.IntegerField(blank=True, null=True, verbose_name='Ano de Construção')),
                ('numero_pavimentos', models.IntegerField(default=1, verbose_name='Número de Pavimentos')),
                ('unidades_por_andar', models.IntegerField(blank=True, null=True, verbose_name='Unidades por Andar')),
                ('tipo_construcao', models.CharField(blank=True, choices=[('ALVENARIA', 'Alvenaria'), ('PRE_MOLDADO', 'Pré-Moldado'), ('MISTA', 'Mista'), ('MADEIRA', 'Madeira')], max_length=20, null=True, verbose_name='Tipo de Construção')),
                ('pe_direito', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Pé-Direito (m)')),
                ('quartos', models.IntegerField(default=0, verbose_name='Quartos')),
                ('suites', models.IntegerField(default=0, verbose_name='Suítes')),
                ('banheiros', models.IntegerField(default=0, verbose_name='Banheiros')),
                ('lavabo', models.BooleanField(default=False, verbose_name='Lavabo')),
                ('sala_estar', models.BooleanField(default=False, verbose_name='Sala de Estar')),
                ('sala_jantar', models.BooleanField(default=False, verbose_name='Sala de Jantar')),
                ('sala_tv', models.BooleanField(default=False, verbose_name='Sala de TV')),
                ('cozinha', models.BooleanField(default=False, verbose_name='Cozinha')),
                ('copa', models.BooleanField(default=False, verbose_name='Copa')),
                ('escritorio', models.BooleanField(default=False, verbose_name='Escritório')),
                ('area_servico', models.BooleanField(default=False, verbose_name='Área de Serviço')),
                ('despensa', models.BooleanField(default=False, verbose_name='Despensa')),
                ('closet', models.BooleanField(default=False, verbose_name='Closet')),
                ('varanda', models.BooleanField(default=False, verbose_name='Varanda / Sacada')),
                ('vagas_garagem', models.IntegerField(default=0, verbose_name='Número de Vagas')),
                ('vaga_coberta', models.BooleanField(default=False, verbose_name='Vaga Coberta')),
                ('vaga_privativa', models.BooleanField(default=False, verbose_name='Vaga Privativa')),
                ('portao_eletronico', models.BooleanField(default=False, verbose_name='Portão Eletrônico')),
                ('ar_condicionado', models.BooleanField(default=False, verbose_name='Ar Condicionado')),
                ('aquecimento', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tipo de Aquecimento')),
                ('gas_central', models.BooleanField(default=False, verbose_name='Gás Central')),
                ('hidrometro_individual', models.BooleanField(default=False, verbose_name='Hidrômetro Individual')),
                ('piso', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tipo de Piso')),
                ('moveis_planejados', models.BooleanField(default=False, verbose_name='Móveis Planejados')),
                ('churrasqueira_privativa', models.BooleanField(default=False, verbose_name='Churrasqueira Privativa')),
                ('piscina_privativa', models.BooleanField(default=False, verbose_name='Piscina Privativa')),
                ('piscina_condominio', models.BooleanField(default=False, verbose_name='Piscina no Condomínio')),
                ('churrasqueira_condominio', models.BooleanField(default=False, verbose_name='Churrasqueira no Condomínio')),
                ('espaco_gourmet', models.BooleanField(default=False, verbose_name='Espaço Gourmet')),
                ('playground', models.BooleanField(default=False, verbose_name='Playground')),
                ('salao_festas', models.BooleanField(default=False, verbose_name='Salão de Festas')),
                ('academia', models.BooleanField(default=False, verbose_name='Academia')),
                ('quadra_esportiva', models.BooleanField(default=False, verbose_name='Quadra Poliesportiva')),
                ('sauna', models.BooleanField(default=False, verbose_name='Sauna')),
                ('espaco_pet', models.BooleanField(default=False, verbose_name='Espaço Pet')),
                ('portaria_24h', models.BooleanField(default=False, verbose_name='Portaria 24h')),
                ('elevador', models.BooleanField(default=False, verbose_name='Elevador')),
                ('vagas_visitantes', models.BooleanField(default=False, verbose_name='Vagas para Visitantes')),
                ('bicicletario', models.BooleanField(default=False, verbose_name='Bicicletário')),
                ('numero_matricula', models.CharField(blank=True, max_length=100, null=True, verbose_name='Número da Matrícula do Imóvel')),
                ('data_captacao', models.DateField(blank=True, null=True, verbose_name='Data de Captação / Início da Autorização')),
                ('data_fim_autorizacao', models.DateField(blank=True, null=True, verbose_name='Data de Fim da Autorização')),
                ('possui_exclusividade', models.BooleanField(default=False, verbose_name='Possui Contrato de Exclusividade?')),
                ('comissao_percentual', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Comissão Acordada (%)')),
                ('documento_autorizacao', models.FileField(blank=True, null=True, upload_to='autorizacoes/', verbose_name='Documento de Autorização Assinado')),
                ('informacoes_adicionais_autorizacao', models.TextField(blank=True, null=True, verbose_name='Informações Adicionais para o Contrato')),
                ('financiavel', models.BooleanField(default=False, verbose_name='Aceita Financiamento')),
                ('aceita_permuta', models.BooleanField(default=False, verbose_name='Aceita Permuta (Troca)')),
                ('quitado', models.BooleanField(default=False, verbose_name='Imóvel Quitado')),
                ('documentacao_ok', models.BooleanField(default=False, verbose_name='Documentação OK')),
                ('descricao_completa', models.TextField(blank=True, null=True, verbose_name='Descrição Detalhada / Observações')),
                ('aceita_pet', models.BooleanField(default=False, verbose_name='Aceita Pet')),
                ('mobiliado', models.BooleanField(default=False, verbose_name='Mobiliado / Semimobiliado')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('imobiliaria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.imobiliaria', verbose_name='Imobiliária')),
                ('proprietario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='imoveis_propriedade', to='app_clientes.cliente', verbose_name='Proprietário')),
            ],
            options={
                'verbose_name': 'Imóvel',
                'verbose_name_plural': 'Imóveis',
                'ordering': ['-data_cadastro'],
            },
        ),
        migrations.CreateModel(
            name='ImagemImovel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagem', models.ImageField(upload_to='imoveis_imagens/')),
                ('principal', models.BooleanField(default=False)),
                ('data_upload', models.DateTimeField(auto_now_add=True)),
                ('ordem', models.PositiveIntegerField(default=0)),
                ('imovel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imagens', to='app_imoveis.imovel')),
            ],
            options={
                'ordering': ['ordem'],
            },
        ),
        migrations.CreateModel(
            name='ContatoImovel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome do Interessado')),
                ('email', models.EmailField(max_length=254, verbose_name='Email de Contato')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Telefone (Opcional)')),
                ('mensagem', models.TextField(verbose_name='Mensagem')),
                ('data_contato', models.DateTimeField(auto_now_add=True, verbose_name='Data do Contato')),
                ('arquivado', models.BooleanField(default=False, verbose_name='Arquivado')),
                ('imovel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contatos', to='app_imoveis.imovel', verbose_name='Imóvel')),
            ],
            options={
                'verbose_name': 'Contato de Imóvel',
                'verbose_name_plural': 'Contatos de Imóveis',
                'ordering': ['-data_contato'],
            },
        ),
    ]
